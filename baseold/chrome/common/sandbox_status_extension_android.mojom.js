// chrome/common/sandbox_status_extension_android.mojom.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

'use strict';

(function() {
  var mojomId = 'chrome/common/sandbox_status_extension_android.mojom';
  if (mojo.internal.isMojomLoaded(mojomId)) {
    console.warn('The following mojom is loaded multiple times: ' + mojomId);
    return;
  }
  mojo.internal.markMojomLoaded(mojomId);
  var bindings = mojo;
  var associatedBindings = mojo;
  var codec = mojo.internal;
  var validator = mojo.internal;

  var exports = mojo.internal.exposeNamespace('chrome.mojom');



  function SandboxStatusExtension_AddSandboxStatusExtension_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  SandboxStatusExtension_AddSandboxStatusExtension_Params.prototype.initDefaults_ = function() {
  };
  SandboxStatusExtension_AddSandboxStatusExtension_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  SandboxStatusExtension_AddSandboxStatusExtension_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  SandboxStatusExtension_AddSandboxStatusExtension_Params.encodedSize = codec.kStructHeaderSize + 0;

  SandboxStatusExtension_AddSandboxStatusExtension_Params.decode = function(decoder) {
    var packed;
    var val = new SandboxStatusExtension_AddSandboxStatusExtension_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  SandboxStatusExtension_AddSandboxStatusExtension_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(SandboxStatusExtension_AddSandboxStatusExtension_Params.encodedSize);
    encoder.writeUint32(0);
  };
  var kSandboxStatusExtension_AddSandboxStatusExtension_Name = 0;

  function SandboxStatusExtensionPtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(SandboxStatusExtension,
                                                   handleOrPtrInfo);
  }

  function SandboxStatusExtensionAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        SandboxStatusExtension, associatedInterfacePtrInfo);
  }

  SandboxStatusExtensionAssociatedPtr.prototype =
      Object.create(SandboxStatusExtensionPtr.prototype);
  SandboxStatusExtensionAssociatedPtr.prototype.constructor =
      SandboxStatusExtensionAssociatedPtr;

  function SandboxStatusExtensionProxy(receiver) {
    this.receiver_ = receiver;
  }
  SandboxStatusExtensionPtr.prototype.addSandboxStatusExtension = function() {
    return SandboxStatusExtensionProxy.prototype.addSandboxStatusExtension
        .apply(this.ptr.getProxy(), arguments);
  };

  SandboxStatusExtensionProxy.prototype.addSandboxStatusExtension = function() {
    var params_ = new SandboxStatusExtension_AddSandboxStatusExtension_Params();
    var builder = new codec.MessageV0Builder(
        kSandboxStatusExtension_AddSandboxStatusExtension_Name,
        codec.align(SandboxStatusExtension_AddSandboxStatusExtension_Params.encodedSize));
    builder.encodeStruct(SandboxStatusExtension_AddSandboxStatusExtension_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };

  function SandboxStatusExtensionStub(delegate) {
    this.delegate_ = delegate;
  }
  SandboxStatusExtensionStub.prototype.addSandboxStatusExtension = function() {
    return this.delegate_ && this.delegate_.addSandboxStatusExtension && this.delegate_.addSandboxStatusExtension();
  }

  SandboxStatusExtensionStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kSandboxStatusExtension_AddSandboxStatusExtension_Name:
      var params = reader.decodeStruct(SandboxStatusExtension_AddSandboxStatusExtension_Params);
      this.addSandboxStatusExtension();
      return true;
    default:
      return false;
    }
  };

  SandboxStatusExtensionStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    default:
      return false;
    }
  };

  function validateSandboxStatusExtensionRequest(messageValidator) {
    var message = messageValidator.message;
    var paramsClass = null;
    switch (message.getName()) {
      case kSandboxStatusExtension_AddSandboxStatusExtension_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = SandboxStatusExtension_AddSandboxStatusExtension_Params;
      break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  function validateSandboxStatusExtensionResponse(messageValidator) {
    return validator.validationError.NONE;
  }

  var SandboxStatusExtension = {
    name: 'chrome.mojom.SandboxStatusExtension',
    kVersion: 0,
    ptrClass: SandboxStatusExtensionPtr,
    proxyClass: SandboxStatusExtensionProxy,
    stubClass: SandboxStatusExtensionStub,
    validateRequest: validateSandboxStatusExtensionRequest,
    validateResponse: null,
  };
  SandboxStatusExtensionStub.prototype.validator = validateSandboxStatusExtensionRequest;
  SandboxStatusExtensionProxy.prototype.validator = null;
  exports.SandboxStatusExtension = SandboxStatusExtension;
  exports.SandboxStatusExtensionPtr = SandboxStatusExtensionPtr;
  exports.SandboxStatusExtensionAssociatedPtr = SandboxStatusExtensionAssociatedPtr;
})();