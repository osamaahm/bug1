// chrome/common/renderer_configuration.mojom.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

'use strict';

(function() {
  var mojomId = 'chrome/common/renderer_configuration.mojom';
  if (mojo.internal.isMojomLoaded(mojomId)) {
    console.warn('The following mojom is loaded multiple times: ' + mojomId);
    return;
  }
  mojo.internal.markMojomLoaded(mojomId);
  var bindings = mojo;
  var associatedBindings = mojo;
  var codec = mojo.internal;
  var validator = mojo.internal;

  var exports = mojo.internal.exposeNamespace('chrome.mojom');
  var content_settings$ =
      mojo.internal.exposeNamespace('contentSettings.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'components/content_settings/core/common/content_settings.mojom', '../../components/content_settings/core/common/content_settings.mojom.js');
  }



  function DynamicParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  DynamicParams.prototype.initDefaults_ = function() {
    this.forceSafeSearch = true;
    this.youtubeRestrict = 0;
    this.allowedDomainsForApps = null;
    this.variationIdsHeader = null;
  };
  DynamicParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  DynamicParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 32}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;




    // validate DynamicParams.allowedDomainsForApps
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 8, false)
    if (err !== validator.validationError.NONE)
        return err;


    // validate DynamicParams.variationIdsHeader
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 16, false)
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  DynamicParams.encodedSize = codec.kStructHeaderSize + 24;

  DynamicParams.decode = function(decoder) {
    var packed;
    var val = new DynamicParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    packed = decoder.readUint8();
    val.forceSafeSearch = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    val.youtubeRestrict = decoder.decodeStruct(codec.Int32);
    val.allowedDomainsForApps = decoder.decodeStruct(codec.String);
    val.variationIdsHeader = decoder.decodeStruct(codec.String);
    return val;
  };

  DynamicParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(DynamicParams.encodedSize);
    encoder.writeUint32(0);
    packed = 0;
    packed |= (val.forceSafeSearch & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.encodeStruct(codec.Int32, val.youtubeRestrict);
    encoder.encodeStruct(codec.String, val.allowedDomainsForApps);
    encoder.encodeStruct(codec.String, val.variationIdsHeader);
  };
  function RendererConfiguration_SetInitialConfiguration_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  RendererConfiguration_SetInitialConfiguration_Params.prototype.initDefaults_ = function() {
    this.isIncognitoProcess = false;
    this.chromeosListener = new bindings.InterfaceRequest();
  };
  RendererConfiguration_SetInitialConfiguration_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  RendererConfiguration_SetInitialConfiguration_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;



    // validate RendererConfiguration_SetInitialConfiguration_Params.chromeosListener
    err = messageValidator.validateInterfaceRequest(offset + codec.kStructHeaderSize + 4, true)
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  RendererConfiguration_SetInitialConfiguration_Params.encodedSize = codec.kStructHeaderSize + 8;

  RendererConfiguration_SetInitialConfiguration_Params.decode = function(decoder) {
    var packed;
    var val = new RendererConfiguration_SetInitialConfiguration_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    packed = decoder.readUint8();
    val.isIncognitoProcess = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    val.chromeosListener = decoder.decodeStruct(codec.NullableInterfaceRequest);
    return val;
  };

  RendererConfiguration_SetInitialConfiguration_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(RendererConfiguration_SetInitialConfiguration_Params.encodedSize);
    encoder.writeUint32(0);
    packed = 0;
    packed |= (val.isIncognitoProcess & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.encodeStruct(codec.NullableInterfaceRequest, val.chromeosListener);
  };
  function RendererConfiguration_SetConfiguration_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  RendererConfiguration_SetConfiguration_Params.prototype.initDefaults_ = function() {
    this.params = null;
  };
  RendererConfiguration_SetConfiguration_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  RendererConfiguration_SetConfiguration_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate RendererConfiguration_SetConfiguration_Params.params
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, DynamicParams, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  RendererConfiguration_SetConfiguration_Params.encodedSize = codec.kStructHeaderSize + 8;

  RendererConfiguration_SetConfiguration_Params.decode = function(decoder) {
    var packed;
    var val = new RendererConfiguration_SetConfiguration_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.params = decoder.decodeStructPointer(DynamicParams);
    return val;
  };

  RendererConfiguration_SetConfiguration_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(RendererConfiguration_SetConfiguration_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(DynamicParams, val.params);
  };
  function RendererConfiguration_SetContentSettingRules_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  RendererConfiguration_SetContentSettingRules_Params.prototype.initDefaults_ = function() {
    this.rules = null;
  };
  RendererConfiguration_SetContentSettingRules_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  RendererConfiguration_SetContentSettingRules_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate RendererConfiguration_SetContentSettingRules_Params.rules
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, content_settings$.RendererContentSettingRules, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  RendererConfiguration_SetContentSettingRules_Params.encodedSize = codec.kStructHeaderSize + 8;

  RendererConfiguration_SetContentSettingRules_Params.decode = function(decoder) {
    var packed;
    var val = new RendererConfiguration_SetContentSettingRules_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.rules = decoder.decodeStructPointer(content_settings$.RendererContentSettingRules);
    return val;
  };

  RendererConfiguration_SetContentSettingRules_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(RendererConfiguration_SetContentSettingRules_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(content_settings$.RendererContentSettingRules, val.rules);
  };
  function RendererConfiguration_SetFieldTrialGroup_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  RendererConfiguration_SetFieldTrialGroup_Params.prototype.initDefaults_ = function() {
    this.trialName = null;
    this.groupName = null;
  };
  RendererConfiguration_SetFieldTrialGroup_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  RendererConfiguration_SetFieldTrialGroup_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate RendererConfiguration_SetFieldTrialGroup_Params.trialName
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 0, false)
    if (err !== validator.validationError.NONE)
        return err;


    // validate RendererConfiguration_SetFieldTrialGroup_Params.groupName
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 8, false)
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  RendererConfiguration_SetFieldTrialGroup_Params.encodedSize = codec.kStructHeaderSize + 16;

  RendererConfiguration_SetFieldTrialGroup_Params.decode = function(decoder) {
    var packed;
    var val = new RendererConfiguration_SetFieldTrialGroup_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.trialName = decoder.decodeStruct(codec.String);
    val.groupName = decoder.decodeStruct(codec.String);
    return val;
  };

  RendererConfiguration_SetFieldTrialGroup_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(RendererConfiguration_SetFieldTrialGroup_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.String, val.trialName);
    encoder.encodeStruct(codec.String, val.groupName);
  };

  function ChromeOSListenerPtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(ChromeOSListener,
                                                   handleOrPtrInfo);
  }

  function ChromeOSListenerAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        ChromeOSListener, associatedInterfacePtrInfo);
  }

  ChromeOSListenerAssociatedPtr.prototype =
      Object.create(ChromeOSListenerPtr.prototype);
  ChromeOSListenerAssociatedPtr.prototype.constructor =
      ChromeOSListenerAssociatedPtr;

  function ChromeOSListenerProxy(receiver) {
    this.receiver_ = receiver;
  }

  function ChromeOSListenerStub(delegate) {
    this.delegate_ = delegate;
  }

  ChromeOSListenerStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    default:
      return false;
    }
  };

  ChromeOSListenerStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    default:
      return false;
    }
  };

  function validateChromeOSListenerRequest(messageValidator) {
    return validator.validationError.NONE;
  }

  function validateChromeOSListenerResponse(messageValidator) {
    return validator.validationError.NONE;
  }

  var ChromeOSListener = {
    name: 'chrome.mojom.ChromeOSListener',
    kVersion: 0,
    ptrClass: ChromeOSListenerPtr,
    proxyClass: ChromeOSListenerProxy,
    stubClass: ChromeOSListenerStub,
    validateRequest: validateChromeOSListenerRequest,
    validateResponse: null,
  };
  ChromeOSListenerStub.prototype.validator = validateChromeOSListenerRequest;
  ChromeOSListenerProxy.prototype.validator = null;
  var kRendererConfiguration_SetInitialConfiguration_Name = 0;
  var kRendererConfiguration_SetConfiguration_Name = 1;
  var kRendererConfiguration_SetContentSettingRules_Name = 2;
  var kRendererConfiguration_SetFieldTrialGroup_Name = 3;

  function RendererConfigurationPtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(RendererConfiguration,
                                                   handleOrPtrInfo);
  }

  function RendererConfigurationAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        RendererConfiguration, associatedInterfacePtrInfo);
  }

  RendererConfigurationAssociatedPtr.prototype =
      Object.create(RendererConfigurationPtr.prototype);
  RendererConfigurationAssociatedPtr.prototype.constructor =
      RendererConfigurationAssociatedPtr;

  function RendererConfigurationProxy(receiver) {
    this.receiver_ = receiver;
  }
  RendererConfigurationPtr.prototype.setInitialConfiguration = function() {
    return RendererConfigurationProxy.prototype.setInitialConfiguration
        .apply(this.ptr.getProxy(), arguments);
  };

  RendererConfigurationProxy.prototype.setInitialConfiguration = function(isIncognitoProcess, chromeosListener) {
    var params_ = new RendererConfiguration_SetInitialConfiguration_Params();
    params_.isIncognitoProcess = isIncognitoProcess;
    params_.chromeosListener = chromeosListener;
    var builder = new codec.MessageV0Builder(
        kRendererConfiguration_SetInitialConfiguration_Name,
        codec.align(RendererConfiguration_SetInitialConfiguration_Params.encodedSize));
    builder.encodeStruct(RendererConfiguration_SetInitialConfiguration_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  RendererConfigurationPtr.prototype.setConfiguration = function() {
    return RendererConfigurationProxy.prototype.setConfiguration
        .apply(this.ptr.getProxy(), arguments);
  };

  RendererConfigurationProxy.prototype.setConfiguration = function(params) {
    var params_ = new RendererConfiguration_SetConfiguration_Params();
    params_.params = params;
    var builder = new codec.MessageV0Builder(
        kRendererConfiguration_SetConfiguration_Name,
        codec.align(RendererConfiguration_SetConfiguration_Params.encodedSize));
    builder.encodeStruct(RendererConfiguration_SetConfiguration_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  RendererConfigurationPtr.prototype.setContentSettingRules = function() {
    return RendererConfigurationProxy.prototype.setContentSettingRules
        .apply(this.ptr.getProxy(), arguments);
  };

  RendererConfigurationProxy.prototype.setContentSettingRules = function(rules) {
    var params_ = new RendererConfiguration_SetContentSettingRules_Params();
    params_.rules = rules;
    var builder = new codec.MessageV0Builder(
        kRendererConfiguration_SetContentSettingRules_Name,
        codec.align(RendererConfiguration_SetContentSettingRules_Params.encodedSize));
    builder.encodeStruct(RendererConfiguration_SetContentSettingRules_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  RendererConfigurationPtr.prototype.setFieldTrialGroup = function() {
    return RendererConfigurationProxy.prototype.setFieldTrialGroup
        .apply(this.ptr.getProxy(), arguments);
  };

  RendererConfigurationProxy.prototype.setFieldTrialGroup = function(trialName, groupName) {
    var params_ = new RendererConfiguration_SetFieldTrialGroup_Params();
    params_.trialName = trialName;
    params_.groupName = groupName;
    var builder = new codec.MessageV0Builder(
        kRendererConfiguration_SetFieldTrialGroup_Name,
        codec.align(RendererConfiguration_SetFieldTrialGroup_Params.encodedSize));
    builder.encodeStruct(RendererConfiguration_SetFieldTrialGroup_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };

  function RendererConfigurationStub(delegate) {
    this.delegate_ = delegate;
  }
  RendererConfigurationStub.prototype.setInitialConfiguration = function(isIncognitoProcess, chromeosListener) {
    return this.delegate_ && this.delegate_.setInitialConfiguration && this.delegate_.setInitialConfiguration(isIncognitoProcess, chromeosListener);
  }
  RendererConfigurationStub.prototype.setConfiguration = function(params) {
    return this.delegate_ && this.delegate_.setConfiguration && this.delegate_.setConfiguration(params);
  }
  RendererConfigurationStub.prototype.setContentSettingRules = function(rules) {
    return this.delegate_ && this.delegate_.setContentSettingRules && this.delegate_.setContentSettingRules(rules);
  }
  RendererConfigurationStub.prototype.setFieldTrialGroup = function(trialName, groupName) {
    return this.delegate_ && this.delegate_.setFieldTrialGroup && this.delegate_.setFieldTrialGroup(trialName, groupName);
  }

  RendererConfigurationStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kRendererConfiguration_SetInitialConfiguration_Name:
      var params = reader.decodeStruct(RendererConfiguration_SetInitialConfiguration_Params);
      this.setInitialConfiguration(params.isIncognitoProcess, params.chromeosListener);
      return true;
    case kRendererConfiguration_SetConfiguration_Name:
      var params = reader.decodeStruct(RendererConfiguration_SetConfiguration_Params);
      this.setConfiguration(params.params);
      return true;
    case kRendererConfiguration_SetContentSettingRules_Name:
      var params = reader.decodeStruct(RendererConfiguration_SetContentSettingRules_Params);
      this.setContentSettingRules(params.rules);
      return true;
    case kRendererConfiguration_SetFieldTrialGroup_Name:
      var params = reader.decodeStruct(RendererConfiguration_SetFieldTrialGroup_Params);
      this.setFieldTrialGroup(params.trialName, params.groupName);
      return true;
    default:
      return false;
    }
  };

  RendererConfigurationStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    default:
      return false;
    }
  };

  function validateRendererConfigurationRequest(messageValidator) {
    var message = messageValidator.message;
    var paramsClass = null;
    switch (message.getName()) {
      case kRendererConfiguration_SetInitialConfiguration_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = RendererConfiguration_SetInitialConfiguration_Params;
      break;
      case kRendererConfiguration_SetConfiguration_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = RendererConfiguration_SetConfiguration_Params;
      break;
      case kRendererConfiguration_SetContentSettingRules_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = RendererConfiguration_SetContentSettingRules_Params;
      break;
      case kRendererConfiguration_SetFieldTrialGroup_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = RendererConfiguration_SetFieldTrialGroup_Params;
      break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  function validateRendererConfigurationResponse(messageValidator) {
    return validator.validationError.NONE;
  }

  var RendererConfiguration = {
    name: 'chrome.mojom.RendererConfiguration',
    kVersion: 0,
    ptrClass: RendererConfigurationPtr,
    proxyClass: RendererConfigurationProxy,
    stubClass: RendererConfigurationStub,
    validateRequest: validateRendererConfigurationRequest,
    validateResponse: null,
  };
  RendererConfigurationStub.prototype.validator = validateRendererConfigurationRequest;
  RendererConfigurationProxy.prototype.validator = null;
  exports.DynamicParams = DynamicParams;
  exports.ChromeOSListener = ChromeOSListener;
  exports.ChromeOSListenerPtr = ChromeOSListenerPtr;
  exports.ChromeOSListenerAssociatedPtr = ChromeOSListenerAssociatedPtr;
  exports.RendererConfiguration = RendererConfiguration;
  exports.RendererConfigurationPtr = RendererConfigurationPtr;
  exports.RendererConfigurationAssociatedPtr = RendererConfigurationAssociatedPtr;
})();