// services/content/public/mojom/navigable_contents.mojom.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

'use strict';

(function() {
  var mojomId = 'services/content/public/mojom/navigable_contents.mojom';
  if (mojo.internal.isMojomLoaded(mojomId)) {
    console.warn('The following mojom is loaded multiple times: ' + mojomId);
    return;
  }
  mojo.internal.markMojomLoaded(mojomId);
  var bindings = mojo;
  var associatedBindings = mojo;
  var codec = mojo.internal;
  var validator = mojo.internal;

  var exports = mojo.internal.exposeNamespace('content.mojom');
  var network_param$ =
      mojo.internal.exposeNamespace('network.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'services/network/public/mojom/network_param.mojom', '../../../network/public/mojom/network_param.mojom.js');
  }
  var ax_tree_id$ =
      mojo.internal.exposeNamespace('ax.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'ui/accessibility/mojom/ax_tree_id.mojom', '../../../../ui/accessibility/mojom/ax_tree_id.mojom.js');
  }
  var window_open_disposition$ =
      mojo.internal.exposeNamespace('ui.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'ui/base/mojom/window_open_disposition.mojom', '../../../../ui/base/mojom/window_open_disposition.mojom.js');
  }
  var geometry$ =
      mojo.internal.exposeNamespace('gfx.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'ui/gfx/geometry/mojom/geometry.mojom', '../../../../ui/gfx/geometry/mojom/geometry.mojom.js');
  }
  var unguessable_token$ =
      mojo.internal.exposeNamespace('mojoBase.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'mojo/public/mojom/base/unguessable_token.mojom', '../../../../mojo/public/mojom/base/unguessable_token.mojom.js');
  }
  var url$ =
      mojo.internal.exposeNamespace('url.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'url/mojom/url.mojom', '../../../../url/mojom/url.mojom.js');
  }



  function NavigateParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  NavigateParams.prototype.initDefaults_ = function() {
    this.shouldClearSessionHistory = false;
  };
  NavigateParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  NavigateParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  NavigateParams.encodedSize = codec.kStructHeaderSize + 8;

  NavigateParams.decode = function(decoder) {
    var packed;
    var val = new NavigateParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    packed = decoder.readUint8();
    val.shouldClearSessionHistory = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  NavigateParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(NavigateParams.encodedSize);
    encoder.writeUint32(0);
    packed = 0;
    packed |= (val.shouldClearSessionHistory & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function NavigableContents_Navigate_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  NavigableContents_Navigate_Params.prototype.initDefaults_ = function() {
    this.url = null;
    this.params = null;
  };
  NavigableContents_Navigate_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  NavigableContents_Navigate_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate NavigableContents_Navigate_Params.url
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, url$.Url, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate NavigableContents_Navigate_Params.params
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, NavigateParams, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  NavigableContents_Navigate_Params.encodedSize = codec.kStructHeaderSize + 16;

  NavigableContents_Navigate_Params.decode = function(decoder) {
    var packed;
    var val = new NavigableContents_Navigate_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.url = decoder.decodeStructPointer(url$.Url);
    val.params = decoder.decodeStructPointer(NavigateParams);
    return val;
  };

  NavigableContents_Navigate_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(NavigableContents_Navigate_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(url$.Url, val.url);
    encoder.encodeStructPointer(NavigateParams, val.params);
  };
  function NavigableContents_GoBack_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  NavigableContents_GoBack_Params.prototype.initDefaults_ = function() {
  };
  NavigableContents_GoBack_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  NavigableContents_GoBack_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  NavigableContents_GoBack_Params.encodedSize = codec.kStructHeaderSize + 0;

  NavigableContents_GoBack_Params.decode = function(decoder) {
    var packed;
    var val = new NavigableContents_GoBack_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  NavigableContents_GoBack_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(NavigableContents_GoBack_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function NavigableContents_GoBack_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  NavigableContents_GoBack_ResponseParams.prototype.initDefaults_ = function() {
    this.success = false;
  };
  NavigableContents_GoBack_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  NavigableContents_GoBack_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  NavigableContents_GoBack_ResponseParams.encodedSize = codec.kStructHeaderSize + 8;

  NavigableContents_GoBack_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new NavigableContents_GoBack_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    packed = decoder.readUint8();
    val.success = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  NavigableContents_GoBack_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(NavigableContents_GoBack_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    packed = 0;
    packed |= (val.success & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function NavigableContents_CreateView_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  NavigableContents_CreateView_Params.prototype.initDefaults_ = function() {
  };
  NavigableContents_CreateView_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  NavigableContents_CreateView_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  NavigableContents_CreateView_Params.encodedSize = codec.kStructHeaderSize + 0;

  NavigableContents_CreateView_Params.decode = function(decoder) {
    var packed;
    var val = new NavigableContents_CreateView_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  NavigableContents_CreateView_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(NavigableContents_CreateView_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function NavigableContents_CreateView_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  NavigableContents_CreateView_ResponseParams.prototype.initDefaults_ = function() {
    this.embedToken = null;
  };
  NavigableContents_CreateView_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  NavigableContents_CreateView_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate NavigableContents_CreateView_ResponseParams.embedToken
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, unguessable_token$.UnguessableToken, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  NavigableContents_CreateView_ResponseParams.encodedSize = codec.kStructHeaderSize + 8;

  NavigableContents_CreateView_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new NavigableContents_CreateView_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.embedToken = decoder.decodeStructPointer(unguessable_token$.UnguessableToken);
    return val;
  };

  NavigableContents_CreateView_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(NavigableContents_CreateView_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(unguessable_token$.UnguessableToken, val.embedToken);
  };
  function NavigableContents_Focus_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  NavigableContents_Focus_Params.prototype.initDefaults_ = function() {
  };
  NavigableContents_Focus_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  NavigableContents_Focus_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  NavigableContents_Focus_Params.encodedSize = codec.kStructHeaderSize + 0;

  NavigableContents_Focus_Params.decode = function(decoder) {
    var packed;
    var val = new NavigableContents_Focus_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  NavigableContents_Focus_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(NavigableContents_Focus_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function NavigableContents_FocusThroughTabTraversal_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  NavigableContents_FocusThroughTabTraversal_Params.prototype.initDefaults_ = function() {
    this.reverse = false;
  };
  NavigableContents_FocusThroughTabTraversal_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  NavigableContents_FocusThroughTabTraversal_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  NavigableContents_FocusThroughTabTraversal_Params.encodedSize = codec.kStructHeaderSize + 8;

  NavigableContents_FocusThroughTabTraversal_Params.decode = function(decoder) {
    var packed;
    var val = new NavigableContents_FocusThroughTabTraversal_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    packed = decoder.readUint8();
    val.reverse = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  NavigableContents_FocusThroughTabTraversal_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(NavigableContents_FocusThroughTabTraversal_Params.encodedSize);
    encoder.writeUint32(0);
    packed = 0;
    packed |= (val.reverse & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function NavigableContentsClient_ClearViewFocus_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  NavigableContentsClient_ClearViewFocus_Params.prototype.initDefaults_ = function() {
  };
  NavigableContentsClient_ClearViewFocus_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  NavigableContentsClient_ClearViewFocus_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  NavigableContentsClient_ClearViewFocus_Params.encodedSize = codec.kStructHeaderSize + 0;

  NavigableContentsClient_ClearViewFocus_Params.decode = function(decoder) {
    var packed;
    var val = new NavigableContentsClient_ClearViewFocus_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  NavigableContentsClient_ClearViewFocus_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(NavigableContentsClient_ClearViewFocus_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function NavigableContentsClient_DidFinishNavigation_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  NavigableContentsClient_DidFinishNavigation_Params.prototype.initDefaults_ = function() {
    this.url = null;
    this.isMainFrame = false;
    this.isErrorPage = false;
    this.responseHeaders = null;
  };
  NavigableContentsClient_DidFinishNavigation_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  NavigableContentsClient_DidFinishNavigation_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 32}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate NavigableContentsClient_DidFinishNavigation_Params.url
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, url$.Url, false);
    if (err !== validator.validationError.NONE)
        return err;




    // validate NavigableContentsClient_DidFinishNavigation_Params.responseHeaders
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 16, network_param$.HttpResponseHeaders, true);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  NavigableContentsClient_DidFinishNavigation_Params.encodedSize = codec.kStructHeaderSize + 24;

  NavigableContentsClient_DidFinishNavigation_Params.decode = function(decoder) {
    var packed;
    var val = new NavigableContentsClient_DidFinishNavigation_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.url = decoder.decodeStructPointer(url$.Url);
    packed = decoder.readUint8();
    val.isMainFrame = (packed >> 0) & 1 ? true : false;
    val.isErrorPage = (packed >> 1) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    val.responseHeaders = decoder.decodeStructPointer(network_param$.HttpResponseHeaders);
    return val;
  };

  NavigableContentsClient_DidFinishNavigation_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(NavigableContentsClient_DidFinishNavigation_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(url$.Url, val.url);
    packed = 0;
    packed |= (val.isMainFrame & 1) << 0
    packed |= (val.isErrorPage & 1) << 1
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.encodeStructPointer(network_param$.HttpResponseHeaders, val.responseHeaders);
  };
  function NavigableContentsClient_DidStopLoading_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  NavigableContentsClient_DidStopLoading_Params.prototype.initDefaults_ = function() {
  };
  NavigableContentsClient_DidStopLoading_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  NavigableContentsClient_DidStopLoading_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  NavigableContentsClient_DidStopLoading_Params.encodedSize = codec.kStructHeaderSize + 0;

  NavigableContentsClient_DidStopLoading_Params.decode = function(decoder) {
    var packed;
    var val = new NavigableContentsClient_DidStopLoading_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  NavigableContentsClient_DidStopLoading_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(NavigableContentsClient_DidStopLoading_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function NavigableContentsClient_DidAutoResizeView_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  NavigableContentsClient_DidAutoResizeView_Params.prototype.initDefaults_ = function() {
    this.newSize = null;
  };
  NavigableContentsClient_DidAutoResizeView_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  NavigableContentsClient_DidAutoResizeView_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate NavigableContentsClient_DidAutoResizeView_Params.newSize
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, geometry$.Size, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  NavigableContentsClient_DidAutoResizeView_Params.encodedSize = codec.kStructHeaderSize + 8;

  NavigableContentsClient_DidAutoResizeView_Params.decode = function(decoder) {
    var packed;
    var val = new NavigableContentsClient_DidAutoResizeView_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.newSize = decoder.decodeStructPointer(geometry$.Size);
    return val;
  };

  NavigableContentsClient_DidAutoResizeView_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(NavigableContentsClient_DidAutoResizeView_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(geometry$.Size, val.newSize);
  };
  function NavigableContentsClient_DidSuppressNavigation_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  NavigableContentsClient_DidSuppressNavigation_Params.prototype.initDefaults_ = function() {
    this.url = null;
    this.disposition = 0;
    this.fromUserGesture = false;
  };
  NavigableContentsClient_DidSuppressNavigation_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  NavigableContentsClient_DidSuppressNavigation_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate NavigableContentsClient_DidSuppressNavigation_Params.url
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, url$.Url, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate NavigableContentsClient_DidSuppressNavigation_Params.disposition
    err = messageValidator.validateEnum(offset + codec.kStructHeaderSize + 8, window_open_disposition$.WindowOpenDisposition);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  NavigableContentsClient_DidSuppressNavigation_Params.encodedSize = codec.kStructHeaderSize + 16;

  NavigableContentsClient_DidSuppressNavigation_Params.decode = function(decoder) {
    var packed;
    var val = new NavigableContentsClient_DidSuppressNavigation_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.url = decoder.decodeStructPointer(url$.Url);
    val.disposition = decoder.decodeStruct(codec.Int32);
    packed = decoder.readUint8();
    val.fromUserGesture = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  NavigableContentsClient_DidSuppressNavigation_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(NavigableContentsClient_DidSuppressNavigation_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(url$.Url, val.url);
    encoder.encodeStruct(codec.Int32, val.disposition);
    packed = 0;
    packed |= (val.fromUserGesture & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function NavigableContentsClient_UpdateContentAXTree_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  NavigableContentsClient_UpdateContentAXTree_Params.prototype.initDefaults_ = function() {
    this.id = null;
  };
  NavigableContentsClient_UpdateContentAXTree_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  NavigableContentsClient_UpdateContentAXTree_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate NavigableContentsClient_UpdateContentAXTree_Params.id
    err = messageValidator.validateUnion(offset + codec.kStructHeaderSize + 0, ax_tree_id$.AXTreeID, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  NavigableContentsClient_UpdateContentAXTree_Params.encodedSize = codec.kStructHeaderSize + 16;

  NavigableContentsClient_UpdateContentAXTree_Params.decode = function(decoder) {
    var packed;
    var val = new NavigableContentsClient_UpdateContentAXTree_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.id = decoder.decodeStruct(ax_tree_id$.AXTreeID);
    return val;
  };

  NavigableContentsClient_UpdateContentAXTree_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(NavigableContentsClient_UpdateContentAXTree_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(ax_tree_id$.AXTreeID, val.id);
  };
  var kNavigableContents_Navigate_Name = 0;
  var kNavigableContents_GoBack_Name = 1;
  var kNavigableContents_CreateView_Name = 2;
  var kNavigableContents_Focus_Name = 3;
  var kNavigableContents_FocusThroughTabTraversal_Name = 4;

  function NavigableContentsPtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(NavigableContents,
                                                   handleOrPtrInfo);
  }

  function NavigableContentsAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        NavigableContents, associatedInterfacePtrInfo);
  }

  NavigableContentsAssociatedPtr.prototype =
      Object.create(NavigableContentsPtr.prototype);
  NavigableContentsAssociatedPtr.prototype.constructor =
      NavigableContentsAssociatedPtr;

  function NavigableContentsProxy(receiver) {
    this.receiver_ = receiver;
  }
  NavigableContentsPtr.prototype.navigate = function() {
    return NavigableContentsProxy.prototype.navigate
        .apply(this.ptr.getProxy(), arguments);
  };

  NavigableContentsProxy.prototype.navigate = function(url, params) {
    var params_ = new NavigableContents_Navigate_Params();
    params_.url = url;
    params_.params = params;
    var builder = new codec.MessageV0Builder(
        kNavigableContents_Navigate_Name,
        codec.align(NavigableContents_Navigate_Params.encodedSize));
    builder.encodeStruct(NavigableContents_Navigate_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  NavigableContentsPtr.prototype.goBack = function() {
    return NavigableContentsProxy.prototype.goBack
        .apply(this.ptr.getProxy(), arguments);
  };

  NavigableContentsProxy.prototype.goBack = function() {
    var params_ = new NavigableContents_GoBack_Params();
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kNavigableContents_GoBack_Name,
          codec.align(NavigableContents_GoBack_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(NavigableContents_GoBack_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(NavigableContents_GoBack_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  NavigableContentsPtr.prototype.createView = function() {
    return NavigableContentsProxy.prototype.createView
        .apply(this.ptr.getProxy(), arguments);
  };

  NavigableContentsProxy.prototype.createView = function() {
    var params_ = new NavigableContents_CreateView_Params();
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kNavigableContents_CreateView_Name,
          codec.align(NavigableContents_CreateView_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(NavigableContents_CreateView_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(NavigableContents_CreateView_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  NavigableContentsPtr.prototype.focus = function() {
    return NavigableContentsProxy.prototype.focus
        .apply(this.ptr.getProxy(), arguments);
  };

  NavigableContentsProxy.prototype.focus = function() {
    var params_ = new NavigableContents_Focus_Params();
    var builder = new codec.MessageV0Builder(
        kNavigableContents_Focus_Name,
        codec.align(NavigableContents_Focus_Params.encodedSize));
    builder.encodeStruct(NavigableContents_Focus_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  NavigableContentsPtr.prototype.focusThroughTabTraversal = function() {
    return NavigableContentsProxy.prototype.focusThroughTabTraversal
        .apply(this.ptr.getProxy(), arguments);
  };

  NavigableContentsProxy.prototype.focusThroughTabTraversal = function(reverse) {
    var params_ = new NavigableContents_FocusThroughTabTraversal_Params();
    params_.reverse = reverse;
    var builder = new codec.MessageV0Builder(
        kNavigableContents_FocusThroughTabTraversal_Name,
        codec.align(NavigableContents_FocusThroughTabTraversal_Params.encodedSize));
    builder.encodeStruct(NavigableContents_FocusThroughTabTraversal_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };

  function NavigableContentsStub(delegate) {
    this.delegate_ = delegate;
  }
  NavigableContentsStub.prototype.navigate = function(url, params) {
    return this.delegate_ && this.delegate_.navigate && this.delegate_.navigate(url, params);
  }
  NavigableContentsStub.prototype.goBack = function() {
    return this.delegate_ && this.delegate_.goBack && this.delegate_.goBack();
  }
  NavigableContentsStub.prototype.createView = function() {
    return this.delegate_ && this.delegate_.createView && this.delegate_.createView();
  }
  NavigableContentsStub.prototype.focus = function() {
    return this.delegate_ && this.delegate_.focus && this.delegate_.focus();
  }
  NavigableContentsStub.prototype.focusThroughTabTraversal = function(reverse) {
    return this.delegate_ && this.delegate_.focusThroughTabTraversal && this.delegate_.focusThroughTabTraversal(reverse);
  }

  NavigableContentsStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kNavigableContents_Navigate_Name:
      var params = reader.decodeStruct(NavigableContents_Navigate_Params);
      this.navigate(params.url, params.params);
      return true;
    case kNavigableContents_Focus_Name:
      var params = reader.decodeStruct(NavigableContents_Focus_Params);
      this.focus();
      return true;
    case kNavigableContents_FocusThroughTabTraversal_Name:
      var params = reader.decodeStruct(NavigableContents_FocusThroughTabTraversal_Params);
      this.focusThroughTabTraversal(params.reverse);
      return true;
    default:
      return false;
    }
  };

  NavigableContentsStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kNavigableContents_GoBack_Name:
      var params = reader.decodeStruct(NavigableContents_GoBack_Params);
      this.goBack().then(function(response) {
        var responseParams =
            new NavigableContents_GoBack_ResponseParams();
        responseParams.success = response.success;
        var builder = new codec.MessageV1Builder(
            kNavigableContents_GoBack_Name,
            codec.align(NavigableContents_GoBack_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(NavigableContents_GoBack_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kNavigableContents_CreateView_Name:
      var params = reader.decodeStruct(NavigableContents_CreateView_Params);
      this.createView().then(function(response) {
        var responseParams =
            new NavigableContents_CreateView_ResponseParams();
        responseParams.embedToken = response.embedToken;
        var builder = new codec.MessageV1Builder(
            kNavigableContents_CreateView_Name,
            codec.align(NavigableContents_CreateView_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(NavigableContents_CreateView_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    default:
      return false;
    }
  };

  function validateNavigableContentsRequest(messageValidator) {
    var message = messageValidator.message;
    var paramsClass = null;
    switch (message.getName()) {
      case kNavigableContents_Navigate_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = NavigableContents_Navigate_Params;
      break;
      case kNavigableContents_GoBack_Name:
        if (message.expectsResponse())
          paramsClass = NavigableContents_GoBack_Params;
      break;
      case kNavigableContents_CreateView_Name:
        if (message.expectsResponse())
          paramsClass = NavigableContents_CreateView_Params;
      break;
      case kNavigableContents_Focus_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = NavigableContents_Focus_Params;
      break;
      case kNavigableContents_FocusThroughTabTraversal_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = NavigableContents_FocusThroughTabTraversal_Params;
      break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  function validateNavigableContentsResponse(messageValidator) {
   var message = messageValidator.message;
   var paramsClass = null;
   switch (message.getName()) {
      case kNavigableContents_GoBack_Name:
        if (message.isResponse())
          paramsClass = NavigableContents_GoBack_ResponseParams;
        break;
      case kNavigableContents_CreateView_Name:
        if (message.isResponse())
          paramsClass = NavigableContents_CreateView_ResponseParams;
        break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  var NavigableContents = {
    name: 'content.mojom.NavigableContents',
    kVersion: 0,
    ptrClass: NavigableContentsPtr,
    proxyClass: NavigableContentsProxy,
    stubClass: NavigableContentsStub,
    validateRequest: validateNavigableContentsRequest,
    validateResponse: validateNavigableContentsResponse,
  };
  NavigableContentsStub.prototype.validator = validateNavigableContentsRequest;
  NavigableContentsProxy.prototype.validator = validateNavigableContentsResponse;
  var kNavigableContentsClient_ClearViewFocus_Name = 0;
  var kNavigableContentsClient_DidFinishNavigation_Name = 1;
  var kNavigableContentsClient_DidStopLoading_Name = 2;
  var kNavigableContentsClient_DidAutoResizeView_Name = 3;
  var kNavigableContentsClient_DidSuppressNavigation_Name = 4;
  var kNavigableContentsClient_UpdateContentAXTree_Name = 5;

  function NavigableContentsClientPtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(NavigableContentsClient,
                                                   handleOrPtrInfo);
  }

  function NavigableContentsClientAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        NavigableContentsClient, associatedInterfacePtrInfo);
  }

  NavigableContentsClientAssociatedPtr.prototype =
      Object.create(NavigableContentsClientPtr.prototype);
  NavigableContentsClientAssociatedPtr.prototype.constructor =
      NavigableContentsClientAssociatedPtr;

  function NavigableContentsClientProxy(receiver) {
    this.receiver_ = receiver;
  }
  NavigableContentsClientPtr.prototype.clearViewFocus = function() {
    return NavigableContentsClientProxy.prototype.clearViewFocus
        .apply(this.ptr.getProxy(), arguments);
  };

  NavigableContentsClientProxy.prototype.clearViewFocus = function() {
    var params_ = new NavigableContentsClient_ClearViewFocus_Params();
    var builder = new codec.MessageV0Builder(
        kNavigableContentsClient_ClearViewFocus_Name,
        codec.align(NavigableContentsClient_ClearViewFocus_Params.encodedSize));
    builder.encodeStruct(NavigableContentsClient_ClearViewFocus_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  NavigableContentsClientPtr.prototype.didFinishNavigation = function() {
    return NavigableContentsClientProxy.prototype.didFinishNavigation
        .apply(this.ptr.getProxy(), arguments);
  };

  NavigableContentsClientProxy.prototype.didFinishNavigation = function(url, isMainFrame, isErrorPage, responseHeaders) {
    var params_ = new NavigableContentsClient_DidFinishNavigation_Params();
    params_.url = url;
    params_.isMainFrame = isMainFrame;
    params_.isErrorPage = isErrorPage;
    params_.responseHeaders = responseHeaders;
    var builder = new codec.MessageV0Builder(
        kNavigableContentsClient_DidFinishNavigation_Name,
        codec.align(NavigableContentsClient_DidFinishNavigation_Params.encodedSize));
    builder.encodeStruct(NavigableContentsClient_DidFinishNavigation_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  NavigableContentsClientPtr.prototype.didStopLoading = function() {
    return NavigableContentsClientProxy.prototype.didStopLoading
        .apply(this.ptr.getProxy(), arguments);
  };

  NavigableContentsClientProxy.prototype.didStopLoading = function() {
    var params_ = new NavigableContentsClient_DidStopLoading_Params();
    var builder = new codec.MessageV0Builder(
        kNavigableContentsClient_DidStopLoading_Name,
        codec.align(NavigableContentsClient_DidStopLoading_Params.encodedSize));
    builder.encodeStruct(NavigableContentsClient_DidStopLoading_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  NavigableContentsClientPtr.prototype.didAutoResizeView = function() {
    return NavigableContentsClientProxy.prototype.didAutoResizeView
        .apply(this.ptr.getProxy(), arguments);
  };

  NavigableContentsClientProxy.prototype.didAutoResizeView = function(newSize) {
    var params_ = new NavigableContentsClient_DidAutoResizeView_Params();
    params_.newSize = newSize;
    var builder = new codec.MessageV0Builder(
        kNavigableContentsClient_DidAutoResizeView_Name,
        codec.align(NavigableContentsClient_DidAutoResizeView_Params.encodedSize));
    builder.encodeStruct(NavigableContentsClient_DidAutoResizeView_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  NavigableContentsClientPtr.prototype.didSuppressNavigation = function() {
    return NavigableContentsClientProxy.prototype.didSuppressNavigation
        .apply(this.ptr.getProxy(), arguments);
  };

  NavigableContentsClientProxy.prototype.didSuppressNavigation = function(url, disposition, fromUserGesture) {
    var params_ = new NavigableContentsClient_DidSuppressNavigation_Params();
    params_.url = url;
    params_.disposition = disposition;
    params_.fromUserGesture = fromUserGesture;
    var builder = new codec.MessageV0Builder(
        kNavigableContentsClient_DidSuppressNavigation_Name,
        codec.align(NavigableContentsClient_DidSuppressNavigation_Params.encodedSize));
    builder.encodeStruct(NavigableContentsClient_DidSuppressNavigation_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  NavigableContentsClientPtr.prototype.updateContentAXTree = function() {
    return NavigableContentsClientProxy.prototype.updateContentAXTree
        .apply(this.ptr.getProxy(), arguments);
  };

  NavigableContentsClientProxy.prototype.updateContentAXTree = function(id) {
    var params_ = new NavigableContentsClient_UpdateContentAXTree_Params();
    params_.id = id;
    var builder = new codec.MessageV0Builder(
        kNavigableContentsClient_UpdateContentAXTree_Name,
        codec.align(NavigableContentsClient_UpdateContentAXTree_Params.encodedSize));
    builder.encodeStruct(NavigableContentsClient_UpdateContentAXTree_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };

  function NavigableContentsClientStub(delegate) {
    this.delegate_ = delegate;
  }
  NavigableContentsClientStub.prototype.clearViewFocus = function() {
    return this.delegate_ && this.delegate_.clearViewFocus && this.delegate_.clearViewFocus();
  }
  NavigableContentsClientStub.prototype.didFinishNavigation = function(url, isMainFrame, isErrorPage, responseHeaders) {
    return this.delegate_ && this.delegate_.didFinishNavigation && this.delegate_.didFinishNavigation(url, isMainFrame, isErrorPage, responseHeaders);
  }
  NavigableContentsClientStub.prototype.didStopLoading = function() {
    return this.delegate_ && this.delegate_.didStopLoading && this.delegate_.didStopLoading();
  }
  NavigableContentsClientStub.prototype.didAutoResizeView = function(newSize) {
    return this.delegate_ && this.delegate_.didAutoResizeView && this.delegate_.didAutoResizeView(newSize);
  }
  NavigableContentsClientStub.prototype.didSuppressNavigation = function(url, disposition, fromUserGesture) {
    return this.delegate_ && this.delegate_.didSuppressNavigation && this.delegate_.didSuppressNavigation(url, disposition, fromUserGesture);
  }
  NavigableContentsClientStub.prototype.updateContentAXTree = function(id) {
    return this.delegate_ && this.delegate_.updateContentAXTree && this.delegate_.updateContentAXTree(id);
  }

  NavigableContentsClientStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kNavigableContentsClient_ClearViewFocus_Name:
      var params = reader.decodeStruct(NavigableContentsClient_ClearViewFocus_Params);
      this.clearViewFocus();
      return true;
    case kNavigableContentsClient_DidFinishNavigation_Name:
      var params = reader.decodeStruct(NavigableContentsClient_DidFinishNavigation_Params);
      this.didFinishNavigation(params.url, params.isMainFrame, params.isErrorPage, params.responseHeaders);
      return true;
    case kNavigableContentsClient_DidStopLoading_Name:
      var params = reader.decodeStruct(NavigableContentsClient_DidStopLoading_Params);
      this.didStopLoading();
      return true;
    case kNavigableContentsClient_DidAutoResizeView_Name:
      var params = reader.decodeStruct(NavigableContentsClient_DidAutoResizeView_Params);
      this.didAutoResizeView(params.newSize);
      return true;
    case kNavigableContentsClient_DidSuppressNavigation_Name:
      var params = reader.decodeStruct(NavigableContentsClient_DidSuppressNavigation_Params);
      this.didSuppressNavigation(params.url, params.disposition, params.fromUserGesture);
      return true;
    case kNavigableContentsClient_UpdateContentAXTree_Name:
      var params = reader.decodeStruct(NavigableContentsClient_UpdateContentAXTree_Params);
      this.updateContentAXTree(params.id);
      return true;
    default:
      return false;
    }
  };

  NavigableContentsClientStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    default:
      return false;
    }
  };

  function validateNavigableContentsClientRequest(messageValidator) {
    var message = messageValidator.message;
    var paramsClass = null;
    switch (message.getName()) {
      case kNavigableContentsClient_ClearViewFocus_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = NavigableContentsClient_ClearViewFocus_Params;
      break;
      case kNavigableContentsClient_DidFinishNavigation_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = NavigableContentsClient_DidFinishNavigation_Params;
      break;
      case kNavigableContentsClient_DidStopLoading_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = NavigableContentsClient_DidStopLoading_Params;
      break;
      case kNavigableContentsClient_DidAutoResizeView_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = NavigableContentsClient_DidAutoResizeView_Params;
      break;
      case kNavigableContentsClient_DidSuppressNavigation_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = NavigableContentsClient_DidSuppressNavigation_Params;
      break;
      case kNavigableContentsClient_UpdateContentAXTree_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = NavigableContentsClient_UpdateContentAXTree_Params;
      break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  function validateNavigableContentsClientResponse(messageValidator) {
    return validator.validationError.NONE;
  }

  var NavigableContentsClient = {
    name: 'content.mojom.NavigableContentsClient',
    kVersion: 0,
    ptrClass: NavigableContentsClientPtr,
    proxyClass: NavigableContentsClientProxy,
    stubClass: NavigableContentsClientStub,
    validateRequest: validateNavigableContentsClientRequest,
    validateResponse: null,
  };
  NavigableContentsClientStub.prototype.validator = validateNavigableContentsClientRequest;
  NavigableContentsClientProxy.prototype.validator = null;
  exports.NavigateParams = NavigateParams;
  exports.NavigableContents = NavigableContents;
  exports.NavigableContentsPtr = NavigableContentsPtr;
  exports.NavigableContentsAssociatedPtr = NavigableContentsAssociatedPtr;
  exports.NavigableContentsClient = NavigableContentsClient;
  exports.NavigableContentsClientPtr = NavigableContentsClientPtr;
  exports.NavigableContentsClientAssociatedPtr = NavigableContentsClientAssociatedPtr;
})();